import { Output, randomPassword, Services } from "~templates-utils";
import { Input } from "./meta";

export function generate(input: Input): Output {
  const services: Services = [];
  const databasePassword = randomPassword();
  const redisPassword = randomPassword();

  services.push({
    type: "app",
    data: {
      serviceName: input.appServiceName,
      env: [
        `SERVER_TYPE=http`,
        `SERVER_PORT=8080`,
        `SERVER_URL=https://$(PRIMARY_DOMAIN)`,
        `SENTRY_DSN=`,
        `CORS_ORIGIN=*`,
        `CORS_METHODS=GET,POST,PUT,DELETE`,
        `CORS_CREDENTIALS=true`,
        `LOG_LEVEL=ERROR,WARN,DEBUG,INFO,LOG,VERBOSE,DARK,WEBHOOKS,WEBSOCKET`,
        `LOG_COLOR=true`,
        `LOG_BAILEYS=error`,
        `EVENT_EMITTER_MAX_LISTENERS=50`,
        `DEL_INSTANCE=false`,
        `DATABASE_PROVIDER=postgresql`,
        `DATABASE_CONNECTION_URI=postgres://postgres:${databasePassword}@$(PROJECT_NAME)_${input.appServiceName}-db:5432/$(PROJECT_NAME)`,
        `DATABASE_CONNECTION_CLIENT_NAME=evolution_exchange`,
        `DATABASE_SAVE_DATA_INSTANCE=true`,
        `DATABASE_SAVE_DATA_NEW_MESSAGE=true`,
        `DATABASE_SAVE_MESSAGE_UPDATE=true`,
        `DATABASE_SAVE_DATA_CONTACTS=true`,
        `DATABASE_SAVE_DATA_CHATS=true`,
        `DATABASE_SAVE_DATA_LABELS=true`,
        `DATABASE_SAVE_DATA_HISTORIC=true`,
        `DATABASE_SAVE_IS_ON_WHATSAPP=true`,
        `DATABASE_SAVE_IS_ON_WHATSAPP_DAYS=7`,
        `DATABASE_DELETE_MESSAGE=true`,
        `RABBITMQ_ENABLED=false`,
        `RABBITMQ_URI=amqp://localhost`,
        `RABBITMQ_EXCHANGE_NAME=evolution`,
        `RABBITMQ_GLOBAL_ENABLED=false`,
        `RABBITMQ_EVENTS_APPLICATION_STARTUP=false`,
        `RABBITMQ_EVENTS_INSTANCE_CREATE=false`,
        `RABBITMQ_EVENTS_INSTANCE_DELETE=false`,
        `RABBITMQ_EVENTS_QRCODE_UPDATED=false`,
        `RABBITMQ_EVENTS_MESSAGES_SET=false`,
        `RABBITMQ_EVENTS_MESSAGES_UPSERT=false`,
        `RABBITMQ_EVENTS_MESSAGES_EDITED=false`,
        `RABBITMQ_EVENTS_MESSAGES_UPDATE=false`,
        `RABBITMQ_EVENTS_MESSAGES_DELETE=false`,
        `RABBITMQ_EVENTS_SEND_MESSAGE=false`,
        `RABBITMQ_EVENTS_CONTACTS_SET=false`,
        `RABBITMQ_EVENTS_CONTACTS_UPSERT=false`,
        `RABBITMQ_EVENTS_CONTACTS_UPDATE=false`,
        `RABBITMQ_EVENTS_PRESENCE_UPDATE=false`,
        `RABBITMQ_EVENTS_CHATS_SET=false`,
        `RABBITMQ_EVENTS_CHATS_UPSERT=false`,
        `RABBITMQ_EVENTS_CHATS_UPDATE=false`,
        `RABBITMQ_EVENTS_CHATS_DELETE=false`,
        `RABBITMQ_EVENTS_GROUPS_UPSERT=false`,
        `RABBITMQ_EVENTS_GROUP_UPDATE=false`,
        `RABBITMQ_EVENTS_GROUP_PARTICIPANTS_UPDATE=false`,
        `RABBITMQ_EVENTS_CONNECTION_UPDATE=false`,
        `RABBITMQ_EVENTS_REMOVE_INSTANCE=false`,
        `RABBITMQ_EVENTS_LOGOUT_INSTANCE=false`,
        `RABBITMQ_EVENTS_CALL=false`,
        `RABBITMQ_EVENTS_TYPEBOT_START=false`,
        `RABBITMQ_EVENTS_TYPEBOT_CHANGE_STATUS=false`,
        `SQS_ENABLED=false`,
        `SQS_ACCESS_KEY_ID=`,
        `SQS_SECRET_ACCESS_KEY=`,
        `SQS_ACCOUNT_ID=`,
        `SQS_REGION=`,
        `WEBSOCKET_ENABLED=false`,
        `WEBSOCKET_GLOBAL_EVENTS=false`,
        `PUSHER_ENABLED=false`,
        `PUSHER_GLOBAL_ENABLED=false`,
        `PUSHER_GLOBAL_APP_ID=`,
        `PUSHER_GLOBAL_KEY=`,
        `PUSHER_GLOBAL_SECRET=`,
        `PUSHER_GLOBAL_CLUSTER=`,
        `PUSHER_GLOBAL_USE_TLS=true`,
        `PUSHER_EVENTS_APPLICATION_STARTUP=true`,
        `PUSHER_EVENTS_QRCODE_UPDATED=true`,
        `PUSHER_EVENTS_MESSAGES_SET=true`,
        `PUSHER_EVENTS_MESSAGES_UPSERT=true`,
        `PUSHER_EVENTS_MESSAGES_EDITED=true`,
        `PUSHER_EVENTS_MESSAGES_UPDATE=true`,
        `PUSHER_EVENTS_MESSAGES_DELETE=true`,
        `PUSHER_EVENTS_SEND_MESSAGE=true`,
        `PUSHER_EVENTS_CONTACTS_SET=true`,
        `PUSHER_EVENTS_CONTACTS_UPSERT=true`,
        `PUSHER_EVENTS_CONTACTS_UPDATE=true`,
        `PUSHER_EVENTS_PRESENCE_UPDATE=true`,
        `PUSHER_EVENTS_CHATS_SET=true`,
        `PUSHER_EVENTS_CHATS_UPSERT=true`,
        `PUSHER_EVENTS_CHATS_UPDATE=true`,
        `PUSHER_EVENTS_CHATS_DELETE=true`,
        `PUSHER_EVENTS_GROUPS_UPSERT=true`,
        `PUSHER_EVENTS_GROUPS_UPDATE=true`,
        `PUSHER_EVENTS_GROUP_PARTICIPANTS_UPDATE=true`,
        `PUSHER_EVENTS_CONNECTION_UPDATE=true`,
        `PUSHER_EVENTS_LABELS_EDIT=true`,
        `PUSHER_EVENTS_LABELS_ASSOCIATION=true`,
        `PUSHER_EVENTS_CALL=true`,
        `PUSHER_EVENTS_TYPEBOT_START=false`,
        `PUSHER_EVENTS_TYPEBOT_CHANGE_STATUS=false`,
        `WA_BUSINESS_TOKEN_WEBHOOK=evolution`,
        `WA_BUSINESS_URL=https://graph.facebook.com`,
        `WA_BUSINESS_VERSION=v20.0`,
        `WA_BUSINESS_LANGUAGE=en_US`,
        `WEBHOOK_GLOBAL_ENABLED=false`,
        `WEBHOOK_GLOBAL_URL=`,
        `WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=false`,
        `WEBHOOK_EVENTS_APPLICATION_STARTUP=false`,
        `WEBHOOK_EVENTS_QRCODE_UPDATED=true`,
        `WEBHOOK_EVENTS_MESSAGES_SET=true`,
        `WEBHOOK_EVENTS_MESSAGES_UPSERT=true`,
        `WEBHOOK_EVENTS_MESSAGES_EDITED=true`,
        `WEBHOOK_EVENTS_MESSAGES_UPDATE=true`,
        `WEBHOOK_EVENTS_MESSAGES_DELETE=true`,
        `WEBHOOK_EVENTS_SEND_MESSAGE=true`,
        `WEBHOOK_EVENTS_CONTACTS_SET=true`,
        `WEBHOOK_EVENTS_CONTACTS_UPSERT=true`,
        `WEBHOOK_EVENTS_CONTACTS_UPDATE=true`,
        `WEBHOOK_EVENTS_PRESENCE_UPDATE=true`,
        `WEBHOOK_EVENTS_CHATS_SET=true`,
        `WEBHOOK_EVENTS_CHATS_UPSERT=true`,
        `WEBHOOK_EVENTS_CHATS_UPDATE=true`,
        `WEBHOOK_EVENTS_CHATS_DELETE=true`,
        `WEBHOOK_EVENTS_GROUPS_UPSERT=true`,
        `WEBHOOK_EVENTS_GROUPS_UPDATE=true`,
        `WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE=true`,
        `WEBHOOK_EVENTS_CONNECTION_UPDATE=true`,
        `WEBHOOK_EVENTS_REMOVE_INSTANCE=false`,
        `WEBHOOK_EVENTS_LOGOUT_INSTANCE=false`,
        `WEBHOOK_EVENTS_LABELS_EDIT=true`,
        `WEBHOOK_EVENTS_LABELS_ASSOCIATION=true`,
        `WEBHOOK_EVENTS_CALL=true`,
        `WEBHOOK_EVENTS_TYPEBOT_START=false`,
        `WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS=false`,
        `WEBHOOK_EVENTS_ERRORS=false`,
        `WEBHOOK_EVENTS_ERRORS_WEBHOOK=`,
        `CONFIG_SESSION_PHONE_CLIENT=Evolution API`,
        `CONFIG_SESSION_PHONE_NAME=Chrome`,
        `CONFIG_SESSION_PHONE_VERSION=2.3000.1020885143`,
        `QRCODE_LIMIT=30`,
        `QRCODE_COLOR=#175197`,
        `TYPEBOT_ENABLED=false`,
        `TYPEBOT_API_VERSION=latest`,
        `CHATWOOT_ENABLED=false`,
        `CHATWOOT_MESSAGE_READ=true`,
        `CHATWOOT_MESSAGE_DELETE=true`,
        `CHATWOOT_BOT_CONTACT=true`,
        `CHATWOOT_IMPORT_DATABASE_CONNECTION_URI=postgresql://user:passwprd@host:5432/chatwoot?sslmode=disable`,
        `CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE=true`,
        `OPENAI_ENABLED=false`,
        `DIFY_ENABLED=false`,
        `CACHE_REDIS_ENABLED=true`,
        `CACHE_REDIS_URI=redis://default:${redisPassword}@$(PROJECT_NAME)_${input.appServiceName}-redis:6379`,
        `CACHE_REDIS_TTL=604800`,
        `CACHE_REDIS_PREFIX_KEY=evolution`,
        `CACHE_REDIS_SAVE_INSTANCES=false`,
        `CACHE_LOCAL_ENABLED=false`,
        `S3_ENABLED=false`,
        `S3_ACCESS_KEY=`,
        `S3_SECRET_KEY=`,
        `S3_BUCKET=evolution`,
        `S3_PORT=443`,
        `S3_ENDPOINT=s3.domain.com`,
        `S3_REGION=eu-west-3`,
        `S3_USE_SSL=true`,
        `AUTHENTICATION_API_KEY=429683C4C977415CAAFCCE10F7D57E11`,
        `AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true`,
        `LANGUAGE=en`,
        `PROXY_HOST=`,
        `PROXY_PORT=80`,
        `PROXY_PROTOCOL=http`,
        `PROXY_USERNAME=`,
        `PROXY_PASSWORD=`,
      ].join("\n"),
      source: {
        type: "image",
        image: input.appServiceImage,
      },
      domains: [
        {
          host: "$(EASYPANEL_DOMAIN)",
          port: 8080,
        },
      ],
      mounts: [
        {
          type: "volume",
          name: "instances",
          mountPath: "/evolution/instances",
        },
      ],
    },
  });

  services.push({
    type: "postgres",
    data: {
      serviceName: `${input.appServiceName}-db`,
      password: databasePassword,
    },
  });

  services.push({
    type: "redis",
    data: {
      serviceName: `${input.appServiceName}-redis`,
      password: redisPassword,
    },
  });

  return { services };
}
